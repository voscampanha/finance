## Database Properties
#spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/finance
spring.datasource.username=postgres
spring.datasource.password=senha123

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.data.rest.base-path=/api

security.oauth2.client.scope=password

# Change default server port and configure view resolver
#server.port=9090
# 
## OAuth2 configuration
#security.oauth2.client.clientId=762083368666-7qkt9liq3u5debfolgj7oioa9s6qoebf.apps.googleusercontent.com
#security.oauth2.client.clientSecret=fsAfBZb5f6dlTCX0yneH-Te7
#security.oauth2.client.preEstablishedRedirectUri=http://localhost:9090/callback
#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.tokenName=oauth_token
#security.oauth2.client.authenticationScheme=query
#security.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=profile
#security.oauth2.resource.user-info-uri=https://www.googleapis.com/userinfo/v2/me
#security.oauth2.client.useCurrentUri=false
#
#spring.security.oauth2.client.registration.my-client.client-id=762083368666-7qkt9liq3u5debfolgj7oioa9s6qoebf.apps.googleusercontent.com
#spring.security.oauth2.client.registration.my-client.client-secret=fsAfBZb5f6dlTCX0yneH
#spring.security.oauth2.client.registration.my-client.provider=google
#
#spring.security.oauth2.client.registration.google.client-id=762083368666-7qkt9liq3u5debfolgj7oioa9s6qoebf.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=fsAfBZb5f6dlTCX0yneH